class Solution:
    def search(self, nums: List[int], target: int) -> int:
        left =0
        right =len(nums)-1
        while left<=right:
            mid = (left + right) //2 
            if nums[mid]==target:
                return mid
            elif nums[mid]<target:
                left = mid+1
            else:
                right = mid-1
        return -1

   

'''
return the index of target in the arr . if not in arr return [-1]

arry is sorted 1-100

i = [1,2,3,4], target = 2
o = 1

i = [9,8,7,5], target = 6
o = -1

brute force? iterate through arr and see if target is there
    class Solution:
    def search(self, nums: List[int], target: int) -> int:
        for i in range(0,len(nums)):
            if nums[i] == target:
                return i

        return -1

two pointers? one at nums[0] and nums[-1]/len(nums) - 1


'''