class Solution:
    def maxProfit(self, prices: List[int]) -> int:
        l , r = 0,1
        max_profit = 0

        while r < len(prices):
            if prices[l] < prices[r]:
                profit = prices[r] - prices[l]
                max_profit = max(max_profit, profit)
            else:
                l = r
            r += 1
        return max_profit
        



'''
return the max amount of profit you can achieve. you can achieve this by choosing a day to buy and a diff day to sell.

i = [1,2,3,4]
o = buy on 0:1 and sell on 3:4 reutnr 3

can i re order array? pick arr[0] sell on arr[-1]

brute force? looping through the whole arr to see that smallest num is before the highest num in the array

two pointers? having a point on one day and another point on another day 
l = buy
r = sell
storing max_profit = storing when the diff between l & r 
time = O(n)
space = O(1)

'''